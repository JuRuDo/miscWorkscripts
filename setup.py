#!/bin/env python

from setuptools import setup, find_packages

setup(
    name="workScripts",
    version="0.1",
    python_requires='>=3.7.0',
    description="Just some work scripts",
    author="Julian Dosch",
    author_email="Dosch@bio.uni-frankfurt.de",
    url="https://github.com/JuRuDo/miscWorkscripts",
    packages=find_packages(),
    package_data={'': ['*']},
    install_requires=[
        'coreapi',
        'urllib3',
        'lxml',
        'scanpy',
        'matplotlib',
    ],
    entry_points={
        'console_scripts': ["uniprot.IDmapper = miscWorkScripts.uniprot.IDmapperUNIPROT:main",
                            "oma.getGroup = miscWorkScripts.oma.getGroup:main",
                            "kegg.getAAseq = miscWorkScripts.kegg.getAAseq:main",
                            "transcriptDEA.mergeResults = miscWorkScripts.transcriptDEA.mergeResults:main",
                            "transcriptDEA.fixEnsIDs = miscWorkScripts.transcriptDEA.fixEnsIDs:main",
                            "transcriptDEA.fixEnsIDsGeneExp = miscWorkScripts.transcriptDEA.fixEnsIDsGeneExp:main",
                            "transcriptDEA.getASevents = miscWorkScripts.transcriptDEA.compExpTranscripts:main",
                            "transcriptDEA.plotExp = miscWorkScripts.transcriptDEA.plotExp:main",
                            "transcriptDEA.plotExpAS = miscWorkScripts.transcriptDEA.plotExpAS:main",
                            "transcriptDEA.plotExpAS2 = miscWorkScripts.transcriptDEA.plotExpAS2:main",
                            "transcriptDEA.getASgenes = miscWorkScripts.transcriptDEA.getASgenes:main",
                            "transcriptDEA.filterColumn = miscWorkScripts.transcriptDEA.getRowsById:main",
                            "transcriptDEA.createUniqueGeneIds = miscWorkScripts.transcriptDEA.unique_gene_id:main",
                            "transcriptDEA.cleanUnspecific = miscWorkScripts.transcriptDEA.removeUnspecificStrand:main",
                            "gsea.matchBGtoData = miscWorkScripts.gsea.matchBGtoData:main",
                            "gsea.bubblePlot = miscWorkScripts.gsea.bubblePlot:main",
                            "dge.pca = miscWorkScripts.dge.pca:main",
                            "dge.pcaPlot = miscWorkScripts.dge.plotpca:main",
                            "dge.checkDGE = miscWorkScripts.dge.checkDGE:main",
                            "misc.filerTable = miscWorkScripts.misc.filterTable:main",
                            "misc.ENSGtoGeneName = miscWorkScripts.misc.ENSGtoGeneName:main",
                            "misc.matchTables = miscWorkScripts.misc.matchTables:main",
                            "misc.DGEcompareranks = miscWorkScripts.misc.DGEcompareranks:main",
                            "misc.plotTSNE = miscWorkScripts.misc.plotTSNE:main",
                            "misc.checkCountMatrix = miscWorkScripts.misc.checkCountMatrix:main",
                            "misc.plotBar = miscWorkScripts.misc.plotBar:main",
                            "misc.plotBox = miscWorkScripts.misc.plotBox:main",
                            "misc.mergeHtseq = miscWorkScripts.misc.mergeHtseq:main",
                            "misc.plotHeatmap = miscWorkScripts.misc.plotHeatmap:main",
                            "misc.canonicalPercent = miscWorkScripts.misc.canonicalPercent:main",
                            "misc.plotSpatial = miscWorkScripts.misc.plotSpatial:main",
                            "misc.getProtLen = miscWorkScripts.misc.getProtLen:main",
                            "misc.plotBoxpanCK0 = miscWorkScripts.misc.plotBoxpanCK0:main",
                            "misc.readXML = miscWorkScripts.misc.readXML:main",
                            "misc.mapAffyxIDs = miscWorkScripts.misc.mapAffyxIDs:main",
                            "misc.mapGenomic = miscWorkScripts.misc.mapGenomic:main",
                            "misc.mapTranscriptomic = miscWorkScripts.misc.mapTranscriptomic:main",
                            "misc.mergeHtseqVar = miscWorkScripts.misc.mergeHtseqVar:main",
                            "misc.prepareHourglassData = miscWorkScripts.misc.prepareHourglassData:main",
                            "sce.makeHeatmap = miscWorkScripts.sce.make_heatmap:main",
                            ],
    },
    license="GPL-3.0",
    classifiers=[
        "Environment :: Console",
        "Development Status :: 3 - Alpha",
        "Intended Audience :: End Users/Desktop",
        "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
        "Natural Language :: English",
        "Programming Language :: Python :: 3",
    ],
)
